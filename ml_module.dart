import 'services/ml_service_locator.dart';
import 'interfaces/i_prediction_service.dart';
import 'interfaces/i_feature_service.dart';
import 'config/ml_config.dart';

/// –û—Å–Ω–æ–≤–Ω–∏–π ML –º–æ–¥—É–ª—å –¥–ª—è —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó –∑ —Ä–µ—à—Ç–æ—é –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É
class MLModule {
  static bool _isInitialized = false;
  
  /// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è ML –º–æ–¥—É–ª—è
  static Future<void> initialize() async {
    if (_isInitialized) return;
    
    try {
      await MLServiceLocator.initialize();
      _isInitialized = true;
      
      print('‚úÖ ML Module —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
    } catch (e) {
      print('‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó ML Module: $e');
      rethrow;
    }
  }
  
  /// –°–µ—Ä–≤—ñ—Å –ø—Ä–æ–≥–Ω–æ–∑—É–≤–∞–Ω–Ω—è
  static IPredictionService get predictionService {
    _ensureInitialized();
    return MLServiceLocator.predictionService;
  }
  
  /// –°–µ—Ä–≤—ñ—Å –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏ –æ–∑–Ω–∞–∫
  static IFeatureService get featureService {
    _ensureInitialized();
    return MLServiceLocator.featureService;
  }
  
  /// –ß–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –º–æ–¥—É–ª—å
  static bool get isInitialized => _isInitialized;
  
  /// –û—á–∏—â–µ–Ω–Ω—è —Ä–µ—Å—É—Ä—Å—ñ–≤
  static Future<void> dispose() async {
    if (!_isInitialized) return;
    
    await MLServiceLocator.dispose();
    _isInitialized = false;
    
    print('üßπ ML Module —Ä–µ—Å—É—Ä—Å–∏ –∑–≤—ñ–ª—å–Ω–µ–Ω–æ');
  }
  
  static void _ensureInitialized() {
    if (!_isInitialized) {
      throw StateError('ML Module –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π. –í–∏–∫–ª–∏—á—Ç–µ MLModule.initialize() —Å–ø–æ—á–∞—Ç–∫—É.');
    }
  }
}
